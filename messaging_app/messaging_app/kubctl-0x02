#!/bin/bash

# Step 1: Apply the blue deployment (current version)
echo "Applying Blue deployment..."
kubectl apply -f blue_deployment.yaml
if [ $? -ne 0 ]; then
  echo "Error applying Blue deployment"
  exit 1
else
  echo "Blue deployment applied successfully"
fi

# Step 2: Apply the green deployment (new version)
echo "Applying Green deployment..."
kubectl apply -f green_deployment.yaml
if [ $? -ne 0 ]; then
  echo "Error applying Green deployment"
  exit 1
else
  echo "Green deployment applied successfully"
fi

# Step 3: Check the status of the pods to verify both blue and green deployments are running
echo "Verifying Pods status..."
kubectl get pods
if [ $? -ne 0 ]; then
  echo "Error getting pods"
  exit 1
else
  echo "Pods are running"
fi

# Step 4: Switch traffic to the green version
echo "Switching traffic to Green deployment..."
kubectl patch service django-messaging-app-service -p '{"spec":{"selector":{"version":"green"}}}'
if [ $? -ne 0 ]; then
  echo "Error switching traffic to Green deployment"
  exit 1
else
  echo "Traffic switched to Green deployment successfully"
fi

# Step 5: Check the logs for the green deployment pods
echo "Checking logs for Green deployment..."
GREEN_POD=$(kubectl get pods -l app=django-messaging-app,version=green -o jsonpath='{.items[0].metadata.name}')
if [ -z "$GREEN_POD" ]; then
  echo "No Green deployment pod found"
  exit 1
else
  kubectl logs "$GREEN_POD"
  if [ $? -ne 0 ]; then
    echo "Error fetching logs for Green deployment"
    exit 1
  else
    echo "Logs for Green deployment displayed successfully"
  fi
fi

echo "Blue-Green deployment completed successfully."
